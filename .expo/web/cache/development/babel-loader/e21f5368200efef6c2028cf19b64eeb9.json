{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { heightUnit } from \"react-native-web/dist/index\";\nimport { weightUnit } from \"react-native-web/dist/index\";\nimport React from 'react';\n\nfunction cal_bmi(lbs, ins) {\n  var h2 = ins * ins;\n  var bmi = lbs / h2 * 703;\n  var f_bmi = Math.floor(bmi);\n  var diff = bmi - f_bmi;\n  diff = diff * 10;\n  diff = Math.round(diff);\n\n  if (diff == 10) {\n    f_bmi += 1;\n    diff = 0;\n  }\n\n  total = f_bmi + \".\" + diff;\n  return total;\n}\n\nfunction chnages(wei, weiType, hei, heiType) {\n  var weCh = wei;\n  var heCh = hei;\n\n  if (isNaN(weCh) || weCh <= 0) {\n    alert(\"Enter Valid Value For -> Weight\");\n    return \"Not Valid Input\";\n  } else if (isNaN(heCh) || heCh <= 0) {\n    alert(\"Enter Valid Value For -> Height\");\n    return \"Not Valid Input\";\n  } else {\n    if (weiType == \"Kg\") {\n      weCh = wei * 2.20462;\n    }\n\n    if (heiType == \"Feet.Inch\") {\n      heCh = parseInt(hei) * 12 + (hei - parseInt(hei)) * 10;\n    }\n\n    if (heiType == \"cm\") {\n      heCh = hei / 2.54;\n    }\n\n    return cal_bmi(weCh, heCh);\n  }\n}\n\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"BMI Calculator\"), React.createElement(View, {\n    style: [{\n      maxHeight: 500,\n      width: \"100%\"\n    }]\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Height\"), React.createElement(View, {\n    style: [styles.inpV, {\n      flexDirection: \"row\"\n    }]\n  }, React.createElement(TextInput, {\n    style: [styles.inpo, {\n      flex: 1\n    }],\n    placeholder: heightUnit,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      setheigh(parseFloat(text));\n    }\n  }), React.createElement(Picker, {\n    style: [styles.selector, {\n      width: 50\n    }],\n    selectedValue: heightUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setheightUnit(itemValue);\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"cm\",\n    value: \"cm\"\n  }), React.createElement(Picker.Item, {\n    label: \"Feet.Inch\",\n    value: \"Feet.Inch\"\n  }))), React.createElement(Text, {\n    style: styles.text\n  }, \"Weight\"), React.createElement(View, {\n    style: [styles.inpV, {\n      flexDirection: \"row\"\n    }]\n  }, React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: [styles.inpo, {\n      flex: 1\n    }],\n    placeholder: weightUnit,\n    onChangeText: function onChangeText(text) {\n      setweigh(parseFloat(text));\n    }\n  }), React.createElement(Picker, {\n    style: [styles.selector, {\n      width: 50\n    }],\n    selectedValue: weightUnit,\n    onValueChange: function onValueChange(itemVale, itemIndx) {\n      return setweightUnit(itemVale);\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Kg\",\n    value: \"Kg\"\n  }), React.createElement(Picker.Item, {\n    label: \"Lbs\",\n    value: \"Lbs\"\n  })))), React.createElement(View, {\n    style: [{\n      width: \"100%\",\n      flexDirection: \"row\",\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    }]\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.submi, styles.shadow],\n    onPress: function onPress() {\n      setbmi(\"BMI = \" + chnages(weigh, weightUnit, heigh, heightUnit));\n    },\n    title: \"Submit\"\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Submit\"))), React.createElement(Text, {\n    style: styles.text2\n  }, bmi));\n};\n\nexport default ProfileScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'gray'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    color: '#F7F7F7'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["C:/Users/rovic/Documents/CC2021/CC2021/new folder/BMI/components/ProfileScreen.js"],"names":["heightUnit","weightUnit","React","cal_bmi","lbs","ins","h2","bmi","f_bmi","Math","floor","diff","round","total","chnages","wei","weiType","hei","heiType","weCh","heCh","isNaN","alert","parseInt","ProfileScreen","navigation","styles","container","title","maxHeight","width","text","inpV","flexDirection","inpo","flex","setheigh","parseFloat","selector","itemValue","itemIndex","setheightUnit","setweigh","itemVale","itemIndx","setweightUnit","alignContent","justifyContent","submi","shadow","setbmi","weigh","heigh","text2","StyleSheet","create","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","color","separator","marginVertical","height"],"mappings":"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","sourcesContent":["import { View, Text, StyleSheet, TouchableOpacity, TextInput, Picker, heightUnit, weightUnit } from \"react-native\";\r\nimport React from 'react';\r\n\r\n\r\nfunction cal_bmi(lbs, ins) {\r\n    let h2 = (ins) * (ins);\r\n    let bmi = (lbs) / h2 * 703\r\n    let f_bmi = Math.floor(bmi);\r\n    let diff = bmi - f_bmi;\r\n    diff = diff * 10;\r\n    diff = Math.round(diff);\r\n    if (diff == 10) {\r\n        f_bmi += 1;\r\n        diff = 0;\r\n    }\r\n    total = f_bmi + \".\" + diff;\r\n    return total;\r\n}\r\n\r\nfunction chnages(wei, weiType, hei, heiType) {\r\n    var weCh = wei;\r\n    var heCh = hei;\r\n    if (isNaN(weCh) || weCh <= 0) {\r\n\r\n        alert(\"Enter Valid Value For -> Weight\");\r\n        return \"Not Valid Input\"\r\n    }\r\n    else if (isNaN(heCh) || heCh <= 0) {\r\n\r\n        alert(\"Enter Valid Value For -> Height\");\r\n        return \"Not Valid Input\"\r\n    }\r\n    else {\r\n        if (weiType == \"Kg\") {\r\n            weCh = wei * 2.20462;\r\n        }\r\n        if (heiType == \"Feet.Inch\") {\r\n            heCh = (parseInt(hei) * 12) + ((hei - parseInt(hei)) * 10);\r\n        }\r\n        if (heiType == \"cm\") {\r\n            heCh = hei / 2.54;\r\n        }\r\n        return cal_bmi(weCh, heCh);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst ProfileScreen = ({ navigation }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>BMI Calculator</Text>\r\n\r\n            <View style={[{ maxHeight: 500, width: \"100%\" }]}>\r\n                <Text style={styles.text}>Height</Text>\r\n\r\n                <View style={[styles.inpV, { flexDirection: \"row\" }]}>\r\n                    <TextInput\r\n                        style={[styles.inpo, { flex: 1 }]}\r\n                        placeholder={heightUnit}\r\n                        keyboardType=\"numeric\"\r\n                        onChangeText={(text) => {\r\n                            setheigh(parseFloat(text));\r\n                        }}>\r\n                    </TextInput>\r\n                    <Picker style={[styles.selector, { width: 50 }]} selectedValue={heightUnit}\r\n                        onValueChange={(itemValue, itemIndex) => setheightUnit(itemValue)}>\r\n                        <Picker.Item label=\"cm\" value=\"cm\" />\r\n                        <Picker.Item label=\"Feet.Inch\" value=\"Feet.Inch\" />\r\n                    </Picker>\r\n                </View>\r\n                <Text style={styles.text}>Weight</Text>\r\n                <View style={[styles.inpV, { flexDirection: \"row\" }]}>\r\n                    <TextInput\r\n                        keyboardType=\"numeric\"\r\n                        style={[styles.inpo, { flex: 1 }]}\r\n                        placeholder={weightUnit}\r\n                        onChangeText={(text) => {\r\n                            setweigh(parseFloat(text));\r\n                        }}\r\n                    ></TextInput>\r\n                    <Picker style={[styles.selector, { width: 50 }]} selectedValue={weightUnit}\r\n                        onValueChange={(itemVale, itemIndx) => setweightUnit(itemVale)}>\r\n                        <Picker.Item label=\"Kg\" value=\"Kg\" />\r\n                        <Picker.Item label=\"Lbs\" value=\"Lbs\" />\r\n                    </Picker>\r\n                </View>\r\n\r\n            </View>\r\n            <View style={[{ width: \"100%\", flexDirection: \"row\", alignContent: \"center\", justifyContent: \"center\" }]}>\r\n                <TouchableOpacity\r\n                    style={[styles.submi, styles.shadow]}\r\n                    onPress={() => {\r\n                        setbmi(\"BMI = \" + chnages(weigh, weightUnit, heigh, heightUnit));\r\n                    }}\r\n                    title=\"Submit\"\r\n                ><Text style={styles.text}>Submit</Text></TouchableOpacity></View>\r\n            <Text style={styles.text2}>{bmi}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'gray',\r\n\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 80,\r\n        color: '#F7F7F7'\r\n    },\r\n    separator: {\r\n        marginVertical: 30,\r\n        height: 1,\r\n        width: '80%',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}