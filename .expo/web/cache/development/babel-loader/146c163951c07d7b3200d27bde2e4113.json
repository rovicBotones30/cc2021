{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\n\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"BMI Calculator\"), React.createElement(View, {\n    style: [{\n      maxHeight: 500,\n      width: \"100%\"\n    }]\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Height\"), React.createElement(View, {\n    style: [styles.inpV, {\n      flexDirection: \"row\"\n    }]\n  }, React.createElement(TextInput, {\n    style: [styles.inpo, {\n      flex: 1\n    }],\n    placeholder: heightUnit,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      setheigh(parseFloat(text));\n    }\n  }), React.createElement(Picker, {\n    style: [styles.selector, {\n      width: 50\n    }],\n    selectedValue: heightUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setheightUnit(itemValue);\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"cm\",\n    value: \"cm\"\n  }), React.createElement(Picker.Item, {\n    label: \"Feet.Inch\",\n    value: \"Feet.Inch\"\n  }))), React.createElement(Text, {\n    style: styles.text\n  }, \"Weight\"), React.createElement(View, {\n    style: [styles.inpV, {\n      flexDirection: \"row\"\n    }]\n  }, React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: [styles.inpo, {\n      flex: 1\n    }],\n    placeholder: weightUnit,\n    onChangeText: function onChangeText(text) {\n      setweigh(parseFloat(text));\n    }\n  }), React.createElement(Picker, {\n    style: [styles.selector, {\n      width: 50\n    }],\n    selectedValue: weightUnit,\n    onValueChange: function onValueChange(itemVale, itemIndx) {\n      return setweightUnit(itemVale);\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Kg\",\n    value: \"Kg\"\n  }), React.createElement(Picker.Item, {\n    label: \"Lbs\",\n    value: \"Lbs\"\n  })))), React.createElement(View, {\n    style: [{\n      width: \"100%\",\n      flexDirection: \"row\",\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    }]\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.submi, styles.shadow],\n    onPress: function onPress() {\n      setbmi(\"BMI = \" + chnages(weigh, weightUnit, heigh, heightUnit));\n    },\n    title: \"Submit\"\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Submit\"))), React.createElement(Text, {\n    style: styles.text2\n  }, bmi)));\n};\n\nexport default ProfileScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\",\n    padding: 8\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 5.84,\n    elevation: 10\n  },\n  submi: {\n    borderRadius: 50,\n    backgroundColor: \"#BDFFF3\",\n    padding: 2,\n    borderWidth: 2,\n    width: 100,\n    textAlignment: \"center\",\n    textAlign: \"center\",\n    gravity: \"center\",\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  },\n  inpV: {\n    borderBottomWidth: 2,\n    borderColor: \"#999\",\n    marginHorizontal: 15,\n    marginBottom: 25,\n    paddingHorizontal: 8\n  },\n  inpo: {},\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    top: 0,\n    marginVertical: 20,\n    textAlign: \"center\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 18,\n    lineHeight: 35\n  },\n  text2: {\n    textAlign: \"center\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    marginTop: 15,\n    lineHeight: 35\n  }\n});","map":{"version":3,"sources":["C:/Users/rovic/Documents/CC2021/CC2021/new folder/BMI/components/ProfileScreen.js"],"names":["React","ProfileScreen","navigation","styles","container","title","maxHeight","width","text","inpV","flexDirection","inpo","flex","heightUnit","setheigh","parseFloat","selector","itemValue","itemIndex","setheightUnit","weightUnit","setweigh","itemVale","itemIndx","setweightUnit","alignContent","justifyContent","submi","shadow","setbmi","chnages","weigh","heigh","text2","bmi","StyleSheet","create","paddingTop","Constants","statusBarHeight","backgroundColor","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth","textAlignment","textAlign","gravity","borderBottomWidth","borderColor","marginHorizontal","marginBottom","paddingHorizontal","fontWeight","fontSize","top","marginVertical","lineHeight","marginTop"],"mappings":"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","sourcesContent":["import { View, Text, StyleSheet, TextInput, Picker, TouchableOpacity } from \"react-native\";\r\nimport React from 'react';\r\nconst ProfileScreen = ({ navigation }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>BMI Calculator</Text>\r\n\r\n                <View style={[{ maxHeight: 500, width: \"100%\" }]}>\r\n                    <Text style={styles.text}>Height</Text>\r\n\r\n                    <View style={[styles.inpV, { flexDirection: \"row\" }]}>\r\n                        <TextInput\r\n                            style={[styles.inpo, { flex: 1 }]}\r\n                            placeholder={heightUnit}\r\n                            keyboardType=\"numeric\"\r\n                            onChangeText={(text) => {\r\n                                setheigh(parseFloat(text));\r\n                            }}>\r\n                        </TextInput>\r\n                        <Picker style={[styles.selector, { width: 50 }]} selectedValue={heightUnit}\r\n                            onValueChange={(itemValue, itemIndex) => setheightUnit(itemValue)}>\r\n                            <Picker.Item label=\"cm\" value=\"cm\" />\r\n                            <Picker.Item label=\"Feet.Inch\" value=\"Feet.Inch\" />\r\n                        </Picker>\r\n                    </View>\r\n                    <Text style={styles.text}>Weight</Text>\r\n                    <View style={[styles.inpV, { flexDirection: \"row\" }]}>\r\n                        <TextInput\r\n                            keyboardType=\"numeric\"\r\n                            style={[styles.inpo, { flex: 1 }]}\r\n                            placeholder={weightUnit}\r\n                            onChangeText={(text) => {\r\n                                setweigh(parseFloat(text));\r\n                            }}\r\n                        ></TextInput>\r\n                        <Picker style={[styles.selector, { width: 50 }]} selectedValue={weightUnit}\r\n                            onValueChange={(itemVale, itemIndx) => setweightUnit(itemVale)}>\r\n                            <Picker.Item label=\"Kg\" value=\"Kg\" />\r\n                            <Picker.Item label=\"Lbs\" value=\"Lbs\" />\r\n                        </Picker>\r\n                    </View>\r\n\r\n                </View>\r\n                <View style={[{ width: \"100%\", flexDirection: \"row\", alignContent: \"center\", justifyContent: \"center\" }]}>\r\n                    <TouchableOpacity\r\n                        style={[styles.submi, styles.shadow]}\r\n                        onPress={() => {\r\n                            setbmi(\"BMI = \" + chnages(weigh, weightUnit, heigh, heightUnit));\r\n                        }}\r\n                        title=\"Submit\"\r\n                    ><Text style={styles.text}>Submit</Text></TouchableOpacity></View>\r\n                <Text style={styles.text2}>{bmi}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingTop: Constants.statusBarHeight,\r\n        backgroundColor: \"#ecf0f1\",\r\n        padding: 8,\r\n    },\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 5.84,\r\n\r\n        elevation: 10,\r\n    },\r\n    submi: {\r\n        borderRadius: 50,\r\n        backgroundColor: \"#BDFFF3\",\r\n        padding: 2,\r\n        borderWidth: 2,\r\n        width: 100,\r\n        textAlignment: \"center\",\r\n        textAlign: \"center\",\r\n        gravity: \"center\",\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inpV: {\r\n        borderBottomWidth: 2,\r\n        borderColor: \"#999\",\r\n        marginHorizontal: 15,\r\n        marginBottom: 25,\r\n        paddingHorizontal: 8\r\n    },\r\n    inpo: {\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 30,\r\n        top: 0,\r\n        marginVertical: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontSize: 18,\r\n        lineHeight: 35,\r\n    },\r\n    text2: {\r\n        textAlign: \"center\",\r\n        fontSize: 22,\r\n        fontWeight: \"bold\",\r\n        marginTop: 15,\r\n        lineHeight: 35,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}